version: '3'
services:
  app:
    container_name: full_app
    build: .
    ports: 
      - 8080:8080 # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: on-failure
    volumes:
      - api:/usr/src/app/
    depends_on:
      - fullstack-postgres # This service depends on postgres. Start that first.
      # - mysql # This service depends on mysql. Start that first.
    networks:
      - fullstack

  fullstack-postgres:
    image: postgres:latest
    container_name: full_db_postgres
    environment:
      - POSTGRES_USER=${DB_USER}  
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST} 
    ports:
      - '5435:5435'
    volumes:
      - database_postgres:/var/lib/postgresql/data
    networks:
      - fullstack

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - fullstack-postgres
    ports:
      - "5050:80"
    networks:
      - fullstack
    restart: unless-stopped
  # mysql:
  #   image: mysql:5.7
  #   ports: 
  #     - 3306:3306
  #   environment: 
  #     - MYSQL_DATABASE=${DB_NAME}
  #     - MYSQL_USER=${DB_USER}
  #     - MYSQL_PASSWORD=${DB_PASSWORD}
  #     - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
  #     - DATABASE_HOST=${DB_HOST} 
  #   volumes:
  #     - database_mysql:/var/lib/postgresql/data
  #   networks:
  #     - fullstack

volumes:
  api:
  database_postgres:

# Networks to be created to facilitate communication between containers
networks:
  fullstack: